@model Bloggie.web.Models.ViewModels.AddBlogPostRequest
@{
}
<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New BlogPost - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    <form method="post">
        <div class="mb-3">
            <label class="form-label">Heading</label>
            <input type="text" class="form-control" id="heading" asp-for="Heading" />
        </div>

        <div class="mb-3">
            <label class="form-label">Page Title</label>
            <input type="text" class="form-control" id="pageTitle" asp-for="PageTitle" />
        </div>

        <div class="mb-3">
            <label class="form-label">Content</label>
            <textarea class="form-control" id="content" asp-for="Content"></textarea>
        </div>

        <div class="mb-3">
            <label class="form-label">Short Description</label>
            <input type="text" class="form-control" id="shortDescription" asp-for="ShortDescription" />
        </div>

        <div class="mb-3">
            <label class="form-label">Featured Image Upload</label>
            <input type="file" id="featuredImageUpload" class="form-control" />
            <img src="" id="featuredImageDisplay" style="display: none; width: 300px;" />
        </div>
        
        <div class="mb-3">
            <label class="form-label">Featured Image URL</label>
            <input type="text" class="form-control" id="featuredImageUrl" asp-for="FeaturedImageUrl" />
        </div>

        <div class="mb-3">
            <label class="form-label">URL Handle</label>
            <input type="text" class="form-control" id="urlHandle" asp-for="UrlHandle" />
        </div>

        <div class="mb-3">
            <label class="form-label">Published Date</label>
            <input type="date" class="form-control" id="publishedDate" asp-for="PublishedDate" />
        </div>

        <div class="mb-3">
            <label class="form-label">Author</label>
            <input type="text" class="form-control" id="author" asp-for="Author" />
        </div>
        
        <div class="form-check mb-3">
            <input class="form-check-input" type="checkbox" id="visible" asp-for="Visible">
            <label class="form-check-label" for="visible">
                Is Visible?
            </label>
        </div>
        <div class="mb-3">
            <label class="form-label">Tags</label>
            <select class="form-select" asp-items="@Model.Tags" asp-for="SelectedTags" multiple ></select>
        </div>
        <div class="mb-3">
            <button type="submit" class="btn btn-success">
                Save
            </button>
        </div>

    </form>
</div>

            @section Scripts{
                <script>
                    var editor= new FroalaEditor('#content');
                    const featuredUploadElement = document.getElementById('featuredImageUpload');
                    const featuredImageUrlElement = document.getElementById('featuredImageUrl');
                    const featuredImageDisplayElement = document.getElementById('featuredImageDisplay');

                    
                    
                    async function uploadFeaturedImage(event){
                           // 1. Create a FormData object to prepare the file for upload
                           let data = new FormData();
                           // The key 'file' must match the parameter name in the C# controller action (IFormFile file)
                           data.append('file', featuredUploadElement.files[0]); //or event.target.files[0]   

                                                     //Use fetch API to send the POST request
                          await fetch('/api/images', {
                              method: 'POST',
                              headers: {
                                  'Accept': '*/*' // Tell the server we accept any response type
                              },
                              body: data
                          })
                          // 3. Convert the response stream to JSON format
                          .then(response => response.json())
                          // 4. Handle the resulting JSON object (from the C# controller)
                          .then(result => {
                                   featuredImageUrlElement.value = result.link;
                                   featuredImageDisplayElement.src = result.link;
                                   //overriding the initial display none to block
                                   featuredImageDisplayElement.style.display = 'block';
                          })
                          .catch(error => {
                              console.error("Upload error:", error);
                                        
            
                          });
                                
                         
                    }
                     //Attach an event listener to the file input
                     featuredUploadElement.addEventListener('change', uploadFeaturedImage);
                </script>
            }